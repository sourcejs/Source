<h1>Spec Page Documentation</h1>

<div class="source_info">

    <p>You can add info blocks to spec pages by adding <code>.source_info</code> to a div:</p>

    <p>Specs are generated directly from the <span class="source_hl">/user</span> folder in Source's <a href="/docs/base#2">file structure</a>. To create a new spec page like this one, make a copy of the <a href="/docs/starting">starting template</a> folder in <span class="source_hl">/user/docs</span>.</p>

</div>

<div class="source_warn">
    <p>Warning blocks can be added using <code>.source_warn</code>:</p>

    <p>It is highly recommended that you read the HTML source of this document.</p>
</div>

<div class="source_doc">
    <p>Some related useful information you can wrap with <code>.source_doc</code></p>
</div>

<p><a class="source_a_d" href="#777">Links can be highlighted as link to design specification by adding <code>.source_a_d</code> as a class on the link</a></p>
<p><a class="source_a_s" href="#777">Links can be highlighted as link to other specification by adding <code>.source_a_s</code> as a class on the link</a></p>

<p>Highlighting can be achieved by either wrapping text in <code>&lt;code&gt;</code> tags, or by using the <span class="source_hl">.source_hl class</span>.</p>

<section class="source_section">
    <h2>Spec Section Heading</h2>

    <a class="source_a_hl" href="#777">Links can be highlighted by adding <code>.source_a_hl</code> as a class on the link</a>

    <p>Notes specific to particular interface elements can be documented here. Heading numbering is generated dynamically, and is supported up to 3 levels deep.</p>

    <p>To render examples of interface elements, place them in a div with a class of <code>.source_example</code>:</p>

    <section class="source_example">
        <div class="some-code">
            <div style="display: none;">Hello world;</div>

            <p>Rendered code examples - main documentation blocks.</p>

            <p>Engine decorative styles do not affect this block. Link your <a href="#2!">project files</a> and start prototyping.</p>

            <p>This page has Twitter Bootstrap styles linked as Master App Styles.</p>

            <a class="btn btn-primary" href="#777">Hey!</a>
        </div>
    </section>

    <h3>Show source code</h3>

    <!-- Inline JS -->
    <!--
    <script>
        require(['jquery'], function($){
            var makeSome;
        });
    </script>
    -->
    <!-- /Inline JS -->

    <code class="src-html">
        Place for HTML code examples.

        If &lt;code class="src-html"&gt; is not set, it will be created
        and filled automatically from "source_example".
    </code>

    <div class="source_example">
        <div class="some-code">
            <p>Click "Show source" in the inner navigation menu on the right to reveal the source for all examples.</p>

            <div class="btn-group">
                <button type="button" class="btn btn-default">Left</button>
                <button type="button" class="btn btn-default">Middle</button>
                <button type="button" class="btn btn-default">Right</button>
            </div>
        </div>
    </div>

    <p>To render and highlight the source code, wrap it in <code>&lt;code class="src-html"&gt;</code>, <code>&lt;code class="src-css"&gt;</code> or <code>&lt;code class="src-js"&gt;</code> tags, depending on the language you want to highlight, like this:</p>
    <code class="src-html source_visible">
        &lt;code class="src-html"&gt;
            <div class="foo">Bar</div>
        &lt;/code&gt;
    </code>
    <code class="src-html source_visible">
        &lt;code class="src-css"&gt;
            &lt;style&gt;
                .css_source {
                    make-it: awesome;
                }
            &lt;/style&gt;
        &lt;/code&gt;
    </code>
    <code class="src-html source_visible">
        &lt;code class="src-js"&gt;
            <script>
                require(['jquery'], function($){
                    var makeSome;
                });
            </script>
        &lt;/code&gt;
    </code>

</section>

<section class="source_section">
    <h2>Linking Your Project's CSS</h2>

    <p>Your project's CSS should be linked to each spec page to render your examples, and you can also add styles specific to a spec page:</p>

    <code class="src-html source_visible">
    <!-- Your project styles -->
        <!--Link all project styles at once-->
            &lt;link href="/docs/data/bootstrap.css" rel="stylesheet"&gt;

        <!--or add separate, spec specific CSS files-->
            &lt;link href="css/spec.css" rel="stylesheet"&gt;
    <!-- /Your project styles -->
    </code>

</section>

<section class="source_section">
    <h2>Spec Page Markup</h2>

    <h3>Documentation Text</h3>

    <p>Only the following tags in documentation sections are styled by Source:</p>

    <ul>
      <li><code>p</code></li>
      <li><code>h1</code></li>
      <li><code>h2</code></li>
      <li><code>h3</code></li>
      <li><code>h4</code></li>
      <li><code>ul</code></li>
      <li><code>li</code></li>
      <li><code>table</code></li>
      <li><code>code</code></li>
    </ul>

    <p>This styling <strong>is not applied inside example blocks</strong>.</p>

    <p>Markdown support for editing documentation sections will be available within the next few updates.</p>

</section>

<style>
    .for-tests {}
</style>
<script>
    var forTest = '';
</script>